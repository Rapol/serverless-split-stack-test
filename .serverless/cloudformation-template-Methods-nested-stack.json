{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "MethodsNestedStack nested stack",
  "Parameters": {
    "ApiGatewayRestApiParameter": {
      "Type": "String"
    },
    "ApiGatewayResourceThingsParameter": {
      "Type": "String"
    },
    "HelloLambdaFunctionArnParameter": {
      "Type": "String"
    }
  },
  "Resources": {
    "ApiGatewayMethodThingsOptions": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "MethodResponses": [
          {
            "StatusCode": "200",
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Credentials": true
            },
            "ResponseModels": {}
          }
        ],
        "RequestParameters": {},
        "Integration": {
          "Type": "MOCK",
          "RequestTemplates": {
            "application/json": "{statusCode:200}"
          },
          "IntegrationResponses": [
            {
              "StatusCode": "200",
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST,GET'",
                "method.response.header.Access-Control-Allow-Credentials": "'false'"
              },
              "ResponseTemplates": {
                "application/json": ""
              }
            }
          ]
        },
        "ResourceId": {
          "Ref": "ApiGatewayResourceThingsParameter"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApiParameter"
        }
      },
      "DependsOn": []
    },
    "ApiGatewayMethodThingsGet": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceThingsParameter"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApiParameter"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:aws:apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Ref": "HelloLambdaFunctionArnParameter"
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": [
          {
            "StatusCode": "200",
            "ResponseModels": {
              "application/json": "GetRequest"
            }
          },
          {
            "StatusCode": "500",
            "ResponseModels": {
              "application/json": "CustomError"
            }
          }
        ]
      },
      "DependsOn": []
    },
    "ApiGatewayMethodThingsPost": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceThingsParameter"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApiParameter"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:aws:apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Ref": "HelloLambdaFunctionArnParameter"
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": [
          {
            "StatusCode": "201",
            "ResponseModels": {
              "application/json": "CreateResponse"
            }
          },
          {
            "StatusCode": "400",
            "ResponseModels": {
              "application/json": "CustomError"
            }
          },
          {
            "StatusCode": "401",
            "ResponseModels": {
              "application/json": "CustomError"
            }
          },
          {
            "StatusCode": "403",
            "ResponseModels": {
              "application/json": "CustomError"
            }
          },
          {
            "StatusCode": "409",
            "ResponseModels": {
              "application/json": "CustomError"
            }
          },
          {
            "StatusCode": "422",
            "ResponseModels": {
              "application/json": "CustomError"
            }
          },
          {
            "StatusCode": "429",
            "ResponseModels": {
              "application/json": "CustomError"
            }
          },
          {
            "StatusCode": "500",
            "ResponseModels": {
              "application/json": "CustomError"
            }
          }
        ],
        "RequestModels": {
          "application/json": "CreateRequest"
        }
      },
      "DependsOn": []
    }
  },
  "Outputs": {}
}