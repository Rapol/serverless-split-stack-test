{
  "service": {
    "service": "split-stack-documentation-test-v2",
    "serviceObject": {
      "name": "split-stack-documentation-test-v2"
    },
    "provider": {
      "stage": "stage",
      "region": "us-east-1",
      "variableSyntax": "\\${([ ~:a-zA-Z0-9._'\",\\-\\/\\(\\)]+?)}",
      "name": "aws",
      "runtime": "nodejs6.10",
      "profile": "cjs-stage",
      "versionFunctions": true,
      "remoteFunctionData": null,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "AccelerateConfiguration": {
                "AccelerationStatus": "Suspended"
              }
            },
            "DependsOn": []
          },
          "HelloLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/split-stack-documentation-test-v2-stage-hello"
            },
            "DependsOn": []
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "stage",
                        "split-stack-documentation-test-v2",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/split-stack-documentation-test-v2-stage-hello:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/split-stack-documentation-test-v2-stage-hello:*:*"
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "split-stack-documentation-test-v2",
                    "stage",
                    "us-east-1",
                    "lambdaRole"
                  ]
                ]
              }
            },
            "DependsOn": []
          },
          "HelloLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/split-stack-documentation-test-v2/stage/1518468687516-2018-02-12T20:51:27.516Z/split-stack-documentation-test-v2.zip"
              },
              "FunctionName": "split-stack-documentation-test-v2-stage-hello",
              "Handler": "handler.hello",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs6.10",
              "Timeout": 6
            },
            "DependsOn": [
              "HelloLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "ApiGatewayDeployment1518468687528": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Fn::GetAtt": [
                  "APINestedStack",
                  "Outputs.ApiGatewayRestApi"
                ]
              },
              "StageName": "stage"
            },
            "DependsOn": [
              "APINestedStack",
              "MethodsNestedStack"
            ]
          },
          "VersionsNestedStack": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
              "Parameters": {
                "HelloLambdaFunctionParameter": {
                  "Ref": "HelloLambdaFunction"
                }
              },
              "TemplateURL": {
                "Fn::Join": [
                  "/",
                  [
                    "https://s3.amazonaws.com",
                    {
                      "Ref": "ServerlessDeploymentBucket"
                    },
                    "serverless/split-stack-documentation-test-v2/stage/1518468687516-2018-02-12T20:51:27.516Z",
                    "cloudformation-template-Versions-nested-stack.json"
                  ]
                ]
              }
            },
            "DependsOn": [
              "HelloLambdaFunction"
            ]
          },
          "APINestedStack": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
              "Parameters": {},
              "TemplateURL": {
                "Fn::Join": [
                  "/",
                  [
                    "https://s3.amazonaws.com",
                    {
                      "Ref": "ServerlessDeploymentBucket"
                    },
                    "serverless/split-stack-documentation-test-v2/stage/1518468687516-2018-02-12T20:51:27.516Z",
                    "cloudformation-template-API-nested-stack.json"
                  ]
                ]
              }
            }
          },
          "MethodsNestedStack": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
              "Parameters": {
                "ApiGatewayRestApiParameter": {
                  "Fn::GetAtt": [
                    "APINestedStack",
                    "Outputs.ApiGatewayRestApi"
                  ]
                },
                "ApiGatewayResourceThingsParameter": {
                  "Fn::GetAtt": [
                    "APINestedStack",
                    "Outputs.ApiGatewayResourceThings"
                  ]
                },
                "HelloLambdaFunctionArnParameter": {
                  "Fn::GetAtt": [
                    "HelloLambdaFunction",
                    "Arn"
                  ]
                }
              },
              "TemplateURL": {
                "Fn::Join": [
                  "/",
                  [
                    "https://s3.amazonaws.com",
                    {
                      "Ref": "ServerlessDeploymentBucket"
                    },
                    "serverless/split-stack-documentation-test-v2/stage/1518468687516-2018-02-12T20:51:27.516Z",
                    "cloudformation-template-Methods-nested-stack.json"
                  ]
                ]
              }
            },
            "DependsOn": [
              "APINestedStack",
              "HelloLambdaFunction",
              "ModelsNestedStack"
            ]
          },
          "PermissionsNestedStack": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
              "Parameters": {
                "ApiGatewayRestApiParameter": {
                  "Fn::GetAtt": [
                    "APINestedStack",
                    "Outputs.ApiGatewayRestApi"
                  ]
                },
                "HelloLambdaFunctionArnParameter": {
                  "Fn::GetAtt": [
                    "HelloLambdaFunction",
                    "Arn"
                  ]
                }
              },
              "TemplateURL": {
                "Fn::Join": [
                  "/",
                  [
                    "https://s3.amazonaws.com",
                    {
                      "Ref": "ServerlessDeploymentBucket"
                    },
                    "serverless/split-stack-documentation-test-v2/stage/1518468687516-2018-02-12T20:51:27.516Z",
                    "cloudformation-template-Permissions-nested-stack.json"
                  ]
                ]
              }
            },
            "DependsOn": [
              "APINestedStack",
              "HelloLambdaFunction"
            ]
          },
          "ModelsNestedStack": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
              "Parameters": {
                "ApiGatewayRestApiParameter": {
                  "Fn::GetAtt": [
                    "APINestedStack",
                    "Outputs.ApiGatewayRestApi"
                  ]
                }
              },
              "TemplateURL": {
                "Fn::Join": [
                  "/",
                  [
                    "https://s3.amazonaws.com",
                    {
                      "Ref": "ServerlessDeploymentBucket"
                    },
                    "serverless/split-stack-documentation-test-v2/stage/1518468687516-2018-02-12T20:51:27.516Z",
                    "cloudformation-template-Models-nested-stack.json"
                  ]
                ]
              }
            },
            "DependsOn": [
              "APINestedStack"
            ]
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          },
          "HelloLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Fn::GetAtt": [
                "VersionsNestedStack",
                "Outputs.HelloLambdaVersion8DLeJbpzjd2XniMircYzvTq0aimJdebv4TBlrFto"
              ]
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Fn::GetAtt": [
                      "APINestedStack",
                      "Outputs.ApiGatewayRestApi"
                    ]
                  },
                  ".execute-api.us-east-1.amazonaws.com/stage"
                ]
              ]
            }
          },
          "AwsDocApiId": {
            "Description": "API ID",
            "Value": {
              "Fn::GetAtt": [
                "APINestedStack",
                "Outputs.ApiGatewayRestApi"
              ]
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "AccelerateConfiguration": {
                "AccelerationStatus": "Suspended"
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "documentation": {
        "info": {
          "version": "2",
          "title": "Name of your API",
          "description": "This is the best API ever",
          "termsOfService": "http://www.example.com/terms-of-service"
        },
        "models": [
          {
            "name": "ErrorResponse",
            "description": "This is an error",
            "contentType": "application/json",
            "schema": {
              "$schema": "http://json-schema.org/draft-04/schema#",
              "type": "object",
              "properties": {
                "status": {
                  "type": "integer"
                },
                "error": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              }
            }
          },
          {
            "name": "CreateRequest",
            "description": "Model for creating something",
            "contentType": "application/json",
            "schema": {
              "$schema": "http://json-schema.org/draft-04/schema#",
              "type": "object",
              "properties": {
                "serialNumber": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                },
                "registrationCode": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                }
              },
              "required": [
                "serialNumber"
              ]
            }
          },
          {
            "name": "GetRequest",
            "description": "Model for getting something",
            "contentType": "application/json",
            "schema": {
              "$schema": "http://json-schema.org/draft-04/schema#",
              "type": "object",
              "properties": {
                "status": {
                  "type": "integer"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "subItem": {
                        "type": "array",
                        "items": {
                          "$schema": "http://json-schema.org/draft-04/schema#",
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "name": "CreateResponse",
            "description": "Model for getting something",
            "contentType": "application/json",
            "schema": {
              "$schema": "http://json-schema.org/draft-04/schema#",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "plugins": [
      "serverless-plugin-split-stacks",
      "serverless-aws-documentation"
    ],
    "functions": {
      "hello": {
        "handler": "handler.hello",
        "events": [
          {
            "http": {
              "path": "things",
              "method": "get",
              "cors": {
                "origins": [
                  "*"
                ],
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "GET"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "documentation": {
                "summary": "Get things",
                "tags": [
                  "get-things"
                ],
                "methodResponses": [
                  {
                    "statusCode": "200",
                    "responseModels": {
                      "application/json": "GetRequest"
                    }
                  },
                  {
                    "statusCode": "500",
                    "responseModels": {
                      "application/json": "ErrorResponse"
                    }
                  }
                ]
              },
              "integration": "AWS_PROXY"
            }
          },
          {
            "http": {
              "path": "things",
              "method": "post",
              "cors": {
                "origins": [
                  "*"
                ],
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "POST"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "documentation": {
                "summary": "Creates a thing",
                "tags": [
                  "create-things"
                ],
                "requestModels": {
                  "application/json": "CreateRequest"
                },
                "methodResponses": [
                  {
                    "statusCode": "201",
                    "responseModels": {
                      "application/json": "CreateResponse"
                    }
                  },
                  {
                    "statusCode": "500",
                    "responseModels": {
                      "application/json": "ErrorResponse"
                    }
                  }
                ]
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "split-stack-documentation-test-v2-stage-hello",
        "package": {},
        "vpc": {}
      }
    },
    "artifact": "/Users/rapol/Projects/split-stack-documentation-test/.serverless/split-stack-documentation-test-v2.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/split-stack-documentation-test-v2/stage/1518468687516-2018-02-12T20:51:27.516Z",
    "artifact": "split-stack-documentation-test-v2.zip"
  }
}